
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module VGA_CONTROL(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	assign VGA_SYNC_N=0;
	wire[9:0] h_addr;
	wire[9:0] v_addr;
	wire[11:0] vga_data;
//=======================================================
//  Structural coding
//=======================================================

	clkgen #(25000000) my_vgaclk(CLOCK_50,1'b0,1'b1,VGA_CLK);
	
	mypic r1(
	.clock(VGA_CLK),
	.data(),
	.rdaddress({h_addr[9:0],v_addr[8:0]}),
	.rden(1'b1),
	.wraddress(),
	.wren(1'b0),
	.q(vga_data));
	
	vga_ctrl(
	.pclk(VGA_CLK), //25MHz时钟
	.reset(SW[0]), //置位
	.vga_data(vga_data), // 上 层 模 块 提 供 的 VGA颜色数据
	.h_addr(h_addr), // 提 供 给 上 层 模 块 的 当 前 扫 描 像 素 点 坐 标
	.v_addr(v_addr),
	.hsync(VGA_HS), // 行 同 步 和 列 同 步 信 号
	.vsync(VGA_VS),
	.valid(VGA_BLANK_N), //消隐
	.vga_r(VGA_R[7:4]), // RGB
	.vga_g(VGA_G[7:4]),
	.vga_b(VGA_B[7:4])
	);
	
	

endmodule
